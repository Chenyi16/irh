spring:
  redis:
    database: 0
    host: 39.105.0.169
    port: 6379
    jedis:
      pool:
        max-active: 20
        max-idle: 10
        max-wait: 5000
    timeout: 10000
    password: irh_aliyun_redis

  datasource:
    druid:
      driver-class-name: com.mysql.jdbc.Driver
      username: "@irh.mysql.username@"
      password: "@irh.mysql.password@"
      url: jdbc:mysql://localhost:3306/irh?characterEncoding=UTF-8&useUnicode=true&allowMultiQueries=true&zeroDateTimeBehavior=convertToNull
      initial-size: 20     # 初始化大小
      max-active: 50      # 连接池中最大的活动数
      max-wait: 30000                             # 最大连接等待时间
      time-between-eviction-runs-millis: 60000    # 配置检测可以关闭的空闲连接间隔时间
      validation-query: select '1' from dual      # 测试连接
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      spring.datasource.filters: stat,wall,log4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis = 5000

      # 合并多个DruidDataSource的监控数据
      useGlobalDataSourceStat: true
  rabbitmq:
    host: "@irh.rabbitmq.host@"
    port: "@irh.rabbitmq.port@"
    username: "@irh.rabbitmq.username@"
    password: "@irh.rabbitmq.password@"



enable:
  needLogin: false

hot:
  topic:
    total: 10   # 显示热搜数量
    refreshTime: 30    #总热度榜刷新时间

batch:
  size: 500   #批量处理点赞收藏的大小

task:
  browserTimes: 30
  upTotal: 30

article:
  rank:
    total: 100

hystrix:
  command:
    default:  #default全局有效，service id指定应用有效
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 60000 #断路器超时时间，默认1000ms